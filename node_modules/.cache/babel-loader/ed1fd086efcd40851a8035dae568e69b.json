{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\Todo\\\\src\\\\Counter.jsx\",\n    _s = $RefreshSig$();\n\n// import React, {useState, useEffect} from 'react'\n// function Counter(props) {\n//     const { user } = props;\n//     const [counterValue, setCounterValue] = useState(0)\n//     const [name, setName] = useState(\"Rahul\")\n//     const reset = () => {\n//         setCounterValue(0);\n//         setName(\"Rahul\");\n// }\n// // useEffect(() => {\n// //     setTimeout(() => {\n// //         setCounterValue((counterValue) => counterValue + 1);\n// //     }, 1000);\n// //   });\n//   return (\n//     <div className='demo' >\n//         <h3>{`Hello ${name}`}</h3>\n//         <p>{user}</p>\n//         <p>{counterValue}</p>\n//         <button onClick={()=>setCounterValue(counterValue+1)}>count ++</button>\n//         <button onClick={reset}>reset</button>\n//         <button onClick={()=>setName(\"Prerna\")}>Change Name</button>\n//     </div>\n//   )\n// }\n// export default Counter\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Counter(props) {\n  _s();\n\n  function handleClick() {\n    console.log({\n      settext\n    });\n  }\n\n  function handleOnChange(event) {\n    settext(event.target.value);\n  }\n\n  const [text, settext] = useState(\"Enter Fruits Name\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Fruits Name : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: text,\n      onChange: handleOnChange,\n      id: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleClick,\n      children: \"submit fruits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"u2qYJ5hGwL7bfVErrY7PjyEn2DE=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","Counter","props","handleClick","console","log","settext","handleOnChange","event","target","value","text"],"sources":["F:/react/Todo/src/Counter.jsx"],"sourcesContent":["// import React, {useState, useEffect} from 'react'\r\n\r\n// function Counter(props) {\r\n//     const { user } = props;\r\n//     const [counterValue, setCounterValue] = useState(0)\r\n//     const [name, setName] = useState(\"Rahul\")\r\n//     const reset = () => {\r\n//         setCounterValue(0);\r\n//         setName(\"Rahul\");\r\n// }\r\n// // useEffect(() => {\r\n// //     setTimeout(() => {\r\n// //         setCounterValue((counterValue) => counterValue + 1);\r\n// //     }, 1000);\r\n// //   });\r\n   \r\n//   return (\r\n//     <div className='demo' >\r\n//         <h3>{`Hello ${name}`}</h3>\r\n//         <p>{user}</p>\r\n//         <p>{counterValue}</p>\r\n//         <button onClick={()=>setCounterValue(counterValue+1)}>count ++</button>\r\n//         <button onClick={reset}>reset</button>\r\n//         <button onClick={()=>setName(\"Prerna\")}>Change Name</button>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Counter\r\n\r\n\r\nimport React , {useState} from 'react'\r\n\r\nfunction Counter(props) {\r\n\r\n  function handleClick(){\r\n    console.log({settext})\r\n  }\r\n  function handleOnChange(event){\r\n    settext(event.target.value)\r\n  }\r\n\r\n  const[text,settext] = useState(\"Enter Fruits Name\")\r\n\r\n  return(<>\r\n    <label htmlFor=\"name\">Fruits Name : </label>\r\n    <input type=\"text\" placeholder={text} onChange={handleOnChange} id='name' />\r\n    <br /><br />\r\n    <button className=\"btn\" onClick={handleClick}>submit fruits</button>\r\n    </>\r\n  )\r\n}\r\nexport default Counter"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EAEtB,SAASC,WAAT,GAAsB;IACpBC,OAAO,CAACC,GAAR,CAAY;MAACC;IAAD,CAAZ;EACD;;EACD,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;IAC5BF,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;EACD;;EAED,MAAK,CAACC,IAAD,EAAML,OAAN,IAAiBN,QAAQ,CAAC,mBAAD,CAA9B;EAEA,oBAAO;IAAA,wBACL;MAAO,OAAO,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADK,eAEL;MAAO,IAAI,EAAC,MAAZ;MAAmB,WAAW,EAAEW,IAAhC;MAAsC,QAAQ,EAAEJ,cAAhD;MAAgE,EAAE,EAAC;IAAnE;MAAA;MAAA;MAAA;IAAA,QAFK,eAGL;MAAA;MAAA;MAAA;IAAA,QAHK,eAGC;MAAA;MAAA;MAAA;IAAA,QAHD,eAIL;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEJ,WAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJK;EAAA,gBAAP;AAOD;;GAlBQF,O;;KAAAA,O;AAmBT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}